// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAcc.Data;

#nullable disable

namespace WebAcc.Migrations
{
    [DbContext(typeof(ContextoDB))]
    partial class ContextoDBModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("WebAcc.Models.Curso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(40)");

                    b.HasKey("Id");

                    b.ToTable("Cursos");
                });

            modelBuilder.Entity("WebAcc.Models.Perfil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(60)");

                    b.HasKey("Id");

                    b.ToTable("Perfis");
                });

            modelBuilder.Entity("WebAcc.Models.Regra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("HorasPorCertificado")
                        .HasColumnType("int");

                    b.Property<int>("MaximoDeHoras")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("VersaoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VersaoId");

                    b.ToTable("Regras");
                });

            modelBuilder.Entity("WebAcc.Models.Submissao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Caminho")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("Horas")
                        .HasColumnType("Decimal(4,1)");

                    b.Property<int>("RegraId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioCursoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RegraId");

                    b.HasIndex("UsuarioCursoId");

                    b.ToTable("Submissoes");
                });

            modelBuilder.Entity("WebAcc.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("PerfilId")
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("varchar(60)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("PerfilId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("WebAcc.Models.UsuarioCurso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CursoId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalDeHoras")
                        .HasColumnType("Decimal(4,1)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<int>("VersaoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.HasIndex("UsuarioId");

                    b.HasIndex("VersaoId");

                    b.ToTable("UsuariosCurso");
                });

            modelBuilder.Entity("WebAcc.Models.Versao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CursoId")
                        .HasColumnType("int");

                    b.Property<int>("NumeroVersao")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.ToTable("Versoes");
                });

            modelBuilder.Entity("WebAcc.Models.Regra", b =>
                {
                    b.HasOne("WebAcc.Models.Versao", "Versao")
                        .WithMany("Regras")
                        .HasForeignKey("VersaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Versao");
                });

            modelBuilder.Entity("WebAcc.Models.Submissao", b =>
                {
                    b.HasOne("WebAcc.Models.Regra", "Regra")
                        .WithMany("Submissoes")
                        .HasForeignKey("RegraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAcc.Models.UsuarioCurso", "UsuarioCurso")
                        .WithMany()
                        .HasForeignKey("UsuarioCursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Regra");

                    b.Navigation("UsuarioCurso");
                });

            modelBuilder.Entity("WebAcc.Models.Usuario", b =>
                {
                    b.HasOne("WebAcc.Models.Perfil", "Perfil")
                        .WithMany("Usuarios")
                        .HasForeignKey("PerfilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Perfil");
                });

            modelBuilder.Entity("WebAcc.Models.UsuarioCurso", b =>
                {
                    b.HasOne("WebAcc.Models.Curso", "Curso")
                        .WithMany("UsuarioCursos")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAcc.Models.Usuario", "Usuario")
                        .WithMany("UsuarioCurso")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAcc.Models.Versao", "Versao")
                        .WithMany("UsuarioCursos")
                        .HasForeignKey("VersaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("Usuario");

                    b.Navigation("Versao");
                });

            modelBuilder.Entity("WebAcc.Models.Versao", b =>
                {
                    b.HasOne("WebAcc.Models.Curso", "Curso")
                        .WithMany("Versoes")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("WebAcc.Models.Curso", b =>
                {
                    b.Navigation("UsuarioCursos");

                    b.Navigation("Versoes");
                });

            modelBuilder.Entity("WebAcc.Models.Perfil", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("WebAcc.Models.Regra", b =>
                {
                    b.Navigation("Submissoes");
                });

            modelBuilder.Entity("WebAcc.Models.Usuario", b =>
                {
                    b.Navigation("UsuarioCurso");
                });

            modelBuilder.Entity("WebAcc.Models.Versao", b =>
                {
                    b.Navigation("Regras");

                    b.Navigation("UsuarioCursos");
                });
#pragma warning restore 612, 618
        }
    }
}
